---
# Modules Used

# https://docs.ansible.com/ansible/latest/modules/set_fact_module.html
# https://docs.ansible.com/ansible/latest/modules/uri_module.html
# https://docs.ansible.com/ansible/latest/modules/debug_module.html
# https://docs.ansible.com/ansible/latest/modules/get_url_module.html
# https://docs.ansible.com/ansible/latest/modules/bigip_lx_package_module.html

# Ansible Information
- name: Set Ansible Information
  hosts: localhost
  gather_facts: False
  connection: local
  vars:
    bigip_provider:
      server: ""
      user: ""
      password: ""
      validate_certs: false
    #Leave below vars unchanged
    tmp_dir: "~/"
    f5_networks_github_base_url: "https://api.github.com/repos/F5Networks"
    as3_file: "as3.rpm"
    as3_file_sha256: "{{as3_file}}.sha256"
    as3_use_latest: false
    as3_requested_tag: "v3.14.0" # a default value that is used if not overidden and if as3_use_latest = false
    do_file: "do.rpm"
    do_file_sha256: "{{do_file}}.sha256"
    do_use_latest: false
    do_requested_tag: "v1.8.0" # a default value that is used if not overidden and if do_use_latest = false
    ts_file: "ts.rpm"
    ts_file_sha256: "{{ts_file}}.sha256"
    ts_use_latest: false
    ts_requested_tag: "v1.6.0" # a default value that is used if not overidden and if ts_use_latest = false

# Launch AWS infrastruture cloudformation stack
  tasks:
  - name: Set AS3 release url
    set_fact:
      package_release_url: "{{ f5_networks_github_base_url }}/f5-appsvcs-extension/releases/{{ 'latest' if as3_use_latest == true else 'tags/' + as3_requested_tag }}"

  - name: Get specific or latest AS3 version and checksum file download urls
    uri:
      url: "{{ package_release_url }}"
      return_content: true
      status_code: 200
    register: as3_github_releases
    check_mode: false

  - set_fact:
      # weird workaround below: https://github.com/ansible/ansible/issues/27299
      as3_release_url: "{{ as3_github_releases.json | to_json | from_json | json_query('assets[?ends_with(name, `.rpm`)] | [0] | browser_download_url') }}"
      as3_release_checksum_url: "{{ as3_github_releases.json | to_json | from_json | json_query('assets[?ends_with(name, `.sha256`)] | [0] | browser_download_url') }}"

  - debug:
      var: as3_release_url
      verbosity: 2

  - name: Download AS3 checksum file (sha256)
    get_url:
      url: "{{ as3_release_checksum_url }}"
      dest: "{{ tmp_dir }}/{{ as3_file_sha256 }}"
      force: true
    check_mode: false

  - name: Set AS3 checksum var
    set_fact:
      as3_checksum: "{{ lookup('file', '{{ tmp_dir }}/{{ as3_file_sha256 }}') | regex_search('^(\\S*)') }}"

  - name: Download AS3 RPM file with check (sha256)
    get_url:
      url: "{{ as3_release_url }}"
      dest: "{{ tmp_dir }}/{{ as3_file }}"
      checksum: "sha256:{{ as3_checksum }}"
      force: true
    check_mode: false

  - name: Add an iAppLX Package for Application Services 3
    bigip_lx_package:
      package: "{{ tmp_dir }}/{{ as3_file }}"
      provider: "{{ bigip_provider }}"
      state: present
    delegate_to: localhost